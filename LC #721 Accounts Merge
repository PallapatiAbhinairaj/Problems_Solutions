https://leetcode.com/problems/accounts-merge/submissions/1773779910/




class Solution {
public:
    vector<vector<string>> accountsMerge(vector<vector<string>>& accounts) {

        unordered_map<string , string> emailToName;
        unordered_map<string , string> parent;


        function<string(string)> find = [&](string s){
            return parent[s] == s ? s : parent[s] = find(parent[s]);
        };

        auto unite = [&](string a , string b) {
            parent[find(a)] = find(b);
        };


        for(auto& acc : accounts) {
            string name = acc[0];
            for(int i = 1 ; i < acc.size(); i++)
            {
                emailToName[acc[i]] = name;
                if(!parent.count(acc[i])) parent[acc[i]] = acc[i] = acc[i];
                unite(acc[1] , acc[i]);
            }
        }


        unordered_map<string , vector<string>> unions;
        for(auto& [email , _] : parent) {
            unions[find(email)].push_back(email);
        }

        vector<vector<string>> res;

        for(auto& [root , emails] : unions) {
            sort(emails.begin() , emails.end());
            emails.insert(emails.begin() , emailToName[root]);
            res.push_back(emails);
        }

        return res;


        
    }
};
