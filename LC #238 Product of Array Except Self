Question link : https://leetcode.com/problems/product-of-array-except-self/

Brute force approach : time limit exceeds...
class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {

        int n = nums.size();
        vector<int>answer(n);

        for(int i = 0 ; i < n ; i++)
        {
            int prod = 1;

            for(int j = 0 ; j < n ; j++)
            {
                if(j != i)
                {
                    prod = prod * nums[j];
                }
            }

            answer[i] = prod;
        }

        return answer;
        
    }
};

====================================================================
Optmised approach : 

class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        int n = nums.size();
        vector<int>right(n,1);
        vector<int>left(n,1);
        vector<int>result(n,1);


        for(int i = 1 ; i < n ; i++)
        {
            left[i] = left[i-1] * nums[i-1];
        }

        for(int i = n - 2 ; i >= 0 ; i--)
        {
            right[i] = right[i+1] * nums[i+1];
        }

        for(int i = 0 ; i < n ; i++)
        {
            result[i] = left[i] * right[i];
        }

        return result;
        
    }
};




