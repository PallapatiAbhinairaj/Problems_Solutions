https://leetcode.com/problems/course-schedule/


class Solution {
public:
    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {

        vector<vector<int>> adj(numCourses);
        for(auto it : prerequisites) {
            adj[it[1]].push_back(it[0]);
        }


        vector<int> indegrees(numCourses , 0); 
        for(int i = 0 ; i < numCourses; i++)
        {
            for(auto it : adj[i]) {
                indegrees[it]++;
            }
        }


        queue<int>q;
        for(int i = 0 ; i < numCourses ; i++){
            if(indegrees[i] == 0) q.push(i);
        }


        int finished = 0;

        while(!q.empty()) {
            int curr = q.front();
            q.pop();
            finished++;

            for(auto neighbour : adj[curr]){
                indegrees[neighbour]--;
                if(indegrees[neighbour] == 0) q.push(neighbour);
            }
        }


        return finished == numCourses;




        
    }
};
